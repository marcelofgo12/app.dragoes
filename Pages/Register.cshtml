@page
@model DragoesEscola.Pages.RegisterModel
@{
  Layout = null;
}
<!doctype html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>::Registro::</title>
  <link rel="shortcut icon" type="image/png" href="./assets/images/logos/logo.png" />
  <link rel="stylesheet" href="./assets/css/styles.min.css" />
  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
  <style>
    .elemento {
      background: linear-gradient(45deg, #000 5%, #F00 50%, #000 95%);
    }

    .form-label {
      margin-bottom: 0px !important;
    }
  </style>
</head>

<body class="elemento">
  <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
       data-sidebar-position="fixed" data-header-position="fixed">
    <div class="position-relative overflow-hidden min-vh-100 d-flex align-items-center justify-content-center">
      <div class="d-flex align-items-center justify-content-center w-100">
        <div class="row justify-content-center w-100">
          <div class="col-md-8 col-lg-6 col-xxl-3">
            <div class="card mb-0">
              <div class="card-body">
                <a class="text-nowrap logo-img text-center d-block py-3 w-100">
                  <img src="./assets/images/logos/logo.png" alt="" style="width:100px">
                </a>
                @if (!ViewData.ModelState.IsValid)
                {
                  <div class="alert alert-danger" style="margin-bottom: 0px;">
                    <ul style="margin-bottom: 0px !important;">
                      @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                      {
                        <li>@error.ErrorMessage</li>
                      }
                    </ul>
                  </div>
                }
                <form method="post" style="margin-top: 15px;">
                  <div class="profile-image-container">
                    <div class="mb-3 d-flex flex-column align-items-center">
                      <img id="profile-preview" class="profile-image" style="width: 120px; border: 1px solid black; padding: 3px;" src="./assets/images/users/user-4.jpg" alt="Foto de Perfil">

                      <div class="camera-icon mt-2" id="camera-button" data-bs-toggle="modal" data-bs-target="#cameraModal">
                        <iconify-icon icon="mdi:camera" style="font-size: 35px; border: 1px solid black; border-radius: 20px; padding: 3px;"></iconify-icon>
                      </div>
                    </div>
                    <div class="row col-md-12 mb-3">
                      <div class="col-md-12">
                        <input type="file" id="upload-foto" accept="image/*" class="form-control form-control-sm" onchange="loadFile(event)">
                      </div>
                    </div>
                    <input type="hidden" asp-for="Input.foto" id="foto-base64" />
                  </div>

                  <div class="mb-3">
                    <label class="form-label">Name</label>
                    <input type="text" class="form-control form-control-sm" asp-for="Input.nome">
                  </div>
                  <div class="mb-3">
                    <label class="form-label">Rg</label>
                    <input type="text" class="form-control form-control-sm" asp-for="Input.rg">
                  </div>
                  <div class="mb-4">
                    <label class="form-label">Data Nascimento</label>
                    <input type="date" asp-for="Input.data_nascimento" class="form-control form-control-sm" placeholder="Selecione a data">
                  </div>
                  <div class="mb-3">
                    <label class="form-label">Telefone</label>
                    <input type="text" id="Input_telefone" class="form-control form-control-sm" asp-for="Input.telefone">
                  </div>
                  <div class="row">
                    <br />
                  </div>
                  <div class="mb-3">
                    <label class="form-label">Senha</label>
                    <input type="password" class="form-control form-control-sm" asp-for="Input.LoginPass">
                  </div>
                  <button type="submit" class="btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2">Cadastre-se</button>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>


  <div class="modal fade" id="cameraModal" tabindex="-1" aria-labelledby="cameraModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <!-- tamanho maior -->
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="cameraModalLabel">Tirar Foto de Perfil</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
        </div>
        <div class="modal-body text-center">
          <video id="camera-stream" autoplay playsinline style="width:100%; max-height: 400px;"></video>
          <canvas id="camera-canvas" style="display:none;"></canvas>
        </div>
        <div class="modal-footer justify-content-between">
          <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancelar</button>
          <button type="button" class="btn btn-primary" id="tirar-foto">Capturar Foto</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  <script src="./assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/iconify-icon@1.0.8/dist/iconify-icon.min.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/inputmask/5.0.8/jquery.inputmask.min.js"></script>


  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const telefoneInput = document.getElementById("Input_telefone");

      function formatPhoneNumber(value) {
        // Remove tudo que não for número
        let digits = value.replace(/\D/g, "");

        if (digits.length > 11) digits = digits.slice(0, 11);

        let formatted = "";

        if (digits.length > 0) {
          formatted += "(" + digits.substring(0, 2);
        }
        if (digits.length >= 3) {
          formatted += ") " + digits.substring(2, digits.length >= 7 ? 7 : 6);
        }
        if (digits.length >= 7) {
          formatted += "-" + digits.substring(7, 11);
        }

        return formatted;
      }

      telefoneInput.addEventListener("input", function (e) {
        const cursorPos = telefoneInput.selectionStart;
        const raw = telefoneInput.value;
        const formatted = formatPhoneNumber(raw);
        telefoneInput.value = formatted;
      });
    });

    document.querySelector("form").addEventListener("submit", function () {
      const input = document.getElementById("Input_telefone");
      input.value = input.value.replace(/\D/g, ""); // só números
    });

    var loadFile = function (event) {
      var output = document.getElementById('profile-preview');
      var reader = new FileReader();
      reader.onload = function () {
        output.src = reader.result;
        document.getElementById('foto-base64').value = reader.result;
      };
      reader.readAsDataURL(event.target.files[0]);
    };

    const video = document.getElementById("camera-stream");
    const canvas = document.getElementById("camera-canvas");
    const tirarFotoBtn = document.getElementById("tirar-foto");
    const imgPreview = document.getElementById("profile-preview");
    const fotoInput = document.getElementById("foto-base64");

    let stream;

    // Ao abrir o modal, inicia a câmera
    const cameraModal = document.getElementById('cameraModal');
    cameraModal.addEventListener('shown.bs.modal', async () => {
      try {
        stream = await navigator.mediaDevices.getUserMedia({ video: true });
        video.srcObject = stream;
      } catch (err) {
        alert("Erro ao acessar a câmera: " + err.message);
      }
    });

    // Ao fechar o modal, para a câmera
    cameraModal.addEventListener('hidden.bs.modal', () => {
      if (stream) {
        stream.getTracks().forEach(track => track.stop());
      }
      video.srcObject = null;
    });

    // Captura a imagem
    tirarFotoBtn.addEventListener("click", () => {
      const context = canvas.getContext("2d");
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;
      context.drawImage(video, 0, 0, canvas.width, canvas.height);

      const imageData = canvas.toDataURL("image/png");
      imgPreview.src = imageData;
      fotoInput.value = imageData;

      // Fecha o modal
      const modal = bootstrap.Modal.getInstance(cameraModal);
      modal.hide();
    });

    document.addEventListener('DOMContentLoaded', function () {
    @if (TempData["CadastroStatus"] != null && TempData["CadastroStatus"].ToString() == "sucesso")
    {
        <text>
      Swal.fire({
        icon: 'success',
        title: 'Sucesso!',
        text: '@Html.Raw(TempData["Mensagem"])',
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = '/';
        }
      });
        </text>
    }
    });
  </script>
</body>

</html>